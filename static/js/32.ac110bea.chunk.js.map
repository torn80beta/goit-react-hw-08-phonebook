{"version":3,"file":"static/js/32.ac110bea.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","components/AddContactForm/AddContactForm.styled.jsx","redux/contacts/selectors.js","components/AddContactForm/AddContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/ContactsPage/ContactsPage.styled.jsx","components/ContactsPage/ContactsPage.jsx","components/SharedStyles/Background.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledTitleH2 = styled.h2`\n  font-size: 18px;\n  color: #363636;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledTitleH2 } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <StyledTitleH2>{title}</StyledTitleH2>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const StyledAddContactFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const StyledLabel = styled.label`\n  /* position: relative;\n  display: block; */\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n  padding: 3px 10px;\n  width: 280px;\n  height: 30px;\n  border: none;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  border-radius: 5px;\n\n  &:focus {\n    outline: 1px solid greenyellow;\n  }\n`;\n\nexport const StyledErrorText = styled.p`\n  position: absolute;\n  top: 26px;\n  font-size: 16px;\n  color: red;\n`;\n\nexport const StyledButton = styled.button`\n  display: block;\n  /* margin: 0 30px 40px; */\n  background-color: white;\n  border: 0px solid gray;\n  border-radius: 5px;\n  padding: 5px 15px;\n  height: 25px;\n  cursor: pointer;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n\n  &:hover,\n  &:focus {\n    background-color: azure;\n  }\n\n  &:active {\n    background-color: rgb(207, 248, 197);\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  StyledInput,\n  StyledErrorText,\n  StyledButton,\n  StyledLabel,\n  StyledAddContactFormWrapper,\n} from './AddContactForm.styled';\nimport * as yup from 'yup';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name is a required field.')\n    .min(2, 'Name must be at least 13 characters.')\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message: 'Name must contain: \"a-z, A-Z, а-я, А-Я\".',\n      excludeEmptyString: false,\n    }),\n  number: yup\n    .string()\n    .required('Number is a required field.')\n    .min(13, 'Number must be at least 13 characters.')\n    .max(13, 'Number must be at most 13 characters.')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      {\n        message: 'Number must contain: \"0-9\" and \"+\" or \"-\" symbols.',\n        excludeEmptyString: false,\n      }\n    ),\n});\n\nconst ErrorForm = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <StyledErrorText>{message}</StyledErrorText>}\n    />\n  );\n};\n\nconst AddContactForm = ({ addContact }) => {\n  const handleNameSubmit = (values, { resetForm }) => {\n    // console.log(values);\n    addContact(values);\n    resetForm();\n  };\n\n  const isFetching = useSelector(getIsLoading);\n\n  handleNameSubmit.propTypes = {\n    values: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n    resetForm: PropTypes.func.isRequired,\n  };\n\n  return (\n    // console.log(isFetching),\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleNameSubmit}\n    >\n      <Form>\n        <StyledAddContactFormWrapper>\n          <StyledLabel htmlFor=\"name\">\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n            <ErrorForm name=\"name\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"number\">\n            <StyledInput\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Phone number\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n            <ErrorForm name=\"number\" />\n          </StyledLabel>\n          <StyledButton type=\"submit\" disabled={isFetching}>\n            {isFetching ? '......Loading' : 'Add contact'}\n          </StyledButton>\n        </StyledAddContactFormWrapper>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddContactForm;\n\nErrorForm.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nAddContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\ninitialValues.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSectionFilter = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFilterInput = styled.input`\n  padding: 3px 10px;\n  width: 280px;\n  height: 30px;\n  border: none;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  border-radius: 5px;\n\n  &:focus {\n    outline: 1px solid greenyellow;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSectionFilter, StyledFilterInput } from './Filter.styled';\n\nconst Filter = ({ onChange }) => {\n  //   console.log(onChange);\n  return (\n    <StyledSectionFilter>\n      <StyledFilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        placeholder=\"Search\"\n      />\n    </StyledSectionFilter>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\n  background-color: #cddadd;\n  border: 0px;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  padding: 7px;\n  cursor: pointer;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n\n  &:hover {\n    background-color: #f1bf90;\n  }\n\n  &:active {\n    background-color: rgb(207, 248, 197);\n  }\n`;\n\nexport const StyledContactsListUL = styled.ul`\n  margin: 20px 15px;\n`;\n\nexport const StyledContactListItemLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 5px;\n  max-width: 500px;\n  height: 40px;\n  margin-bottom: 5px;\n  color: #fff;\n  border-bottom: 1px solid white;\n`;\n\nexport const StyledButtonsWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledButton,\n  StyledContactListItemLi,\n  StyledContactsListUL,\n  StyledButtonsWrapper,\n} from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter, getIsLoading } from 'redux/contacts/selectors';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport EditNoteOutlinedIcon from '@mui/icons-material/EditNoteOutlined';\n/* Modal */\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nModal.setAppElement('#modal-root');\n/*  */\n\nconst getFilteredContacts = (contacts, filter) => {\n  return contacts.filter(({ name }) => {\n    // console.log(contacts);\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n};\n\nexport const Contacts = ({ onDeleteContact }) => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n  const isFetching = useSelector(getIsLoading);\n\n  /* Modal */\n  const dispatch = useDispatch();\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editNumber, setEditNumber] = useState('');\n\n  function openModal(name, number, id) {\n    setIsOpen(true);\n    setEditName(name);\n    setEditNumber(number);\n    setEditId(id);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function handleNameChange(event) {\n    setEditName(event.target.value);\n  }\n\n  function handleNumberChange(event) {\n    setEditNumber(event.target.value);\n  }\n\n  function handleEditContact(e) {\n    e.preventDefault();\n    dispatch(editContact({ id: editId, name: editName, number: editNumber }));\n    closeModal();\n  }\n  /*  */\n\n  return (\n    // console.log(contacts),\n    <StyledContactsListUL>\n      {filteredContacts.map(({ id, name, number }) => (\n        <StyledContactListItemLi key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <StyledButtonsWrapper>\n            <StyledButton onClick={() => openModal(name, number, id)}>\n              <EditNoteOutlinedIcon sx={{ fontSize: 19 }} />\n            </StyledButton>\n            <StyledButton\n              onClick={() => onDeleteContact(id)}\n              disabled={isFetching}\n            >\n              <DeleteOutlineIcon sx={{ fontSize: 16 }} />\n            </StyledButton>\n          </StyledButtonsWrapper>\n          <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            contentLabel=\"Example Modal\"\n          >\n            <button onClick={closeModal}>close</button>\n            <div>Edit contact</div>\n            <form onSubmit={handleEditContact}>\n              <p>Contact ID {id}</p>\n              <input value={editName} onChange={handleNameChange} />\n              <input value={editNumber} onChange={handleNumberChange} />\n              <button type=\"submit\">Submit</button>\n            </form>\n          </Modal>\n        </StyledContactListItemLi>\n      ))}\n    </StyledContactsListUL>\n  );\n};\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 17px;\n  margin-top: 0px;\n`;\n\nexport const StyledContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: flex-start;\n  align-items: center;\n  max-height: 390px;\n  margin-bottom: 10px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { Title } from 'components/Title/Title';\nimport AddContactForm from 'components/AddContactForm/AddContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/operations';\nimport {\n  StyledContactsWrapper,\n  StyledFormWrapper,\n} from './ContactsPage.styled';\nimport { StyledBackground } from 'components/SharedStyles/Background.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const checkContact = (arr, newName) => {\n    return arr.some(({ name }) => {\n      return newName.toLowerCase() === name.toLowerCase();\n    });\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    const check = checkContact(contacts, name);\n    if (check) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name: name, number: number }));\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <StyledBackground>\n      <StyledFormWrapper>\n        <Title title={'Add Contact'} />\n        <AddContactForm addContact={handleAddContact} />\n        <Filter value={filter} onChange={handleFilterChange} />\n      </StyledFormWrapper>\n      <StyledContactsWrapper>\n        <Contacts onDeleteContact={handleDeleteContact} />\n      </StyledContactsWrapper>\n    </StyledBackground>\n  );\n}\n","import styled from '@emotion/styled';\nimport photo_bg from '../../images/photo_bg.jpg';\n\nexport const StyledBackground = styled.div`\n  position: relative;\n  top: -9px;\n  left: 0px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-image: url(${photo_bg});\n  background-repeat: no-repeat;\n  /* background-position: center; */\n  background-size: cover;\n  min-width: 356px;\n  min-height: 640px;\n  overflow: hidden;\n  border-bottom-left-radius: 30px;\n  border-bottom-right-radius: 30px;\n`;\n"],"names":["StyledTitleH2","styled","Title","title","StyledAddContactFormWrapper","StyledLabel","StyledInput","Field","StyledErrorText","StyledButton","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","initialValues","name","number","schema","yup","shape","required","min","matches","message","excludeEmptyString","max","ErrorForm","render","addContact","handleNameSubmit","values","resetForm","isFetching","useSelector","propTypes","PropTypes","isRequired","validationSchema","onSubmit","htmlFor","type","placeholder","disabled","StyledSectionFilter","StyledFilterInput","onChange","StyledContactsListUL","StyledContactListItemLi","StyledButtonsWrapper","Modal","Contacts","onDeleteContact","filteredContacts","toLowerCase","includes","getFilteredContacts","dispatch","useDispatch","useState","modalIsOpen","setIsOpen","editId","setEditId","editName","setEditName","editNumber","setEditNumber","closeModal","handleNameChange","event","target","value","handleNumberChange","handleEditContact","e","preventDefault","editContact","id","map","onClick","openModal","EditNoteOutlined","sx","fontSize","DeleteOutline","isOpen","onRequestClose","contentLabel","StyledFormWrapper","StyledContactsWrapper","ContactsPage","useEffect","fetchContacts","newName","check","some","alert","changeFilter","contactId","deleteContact","StyledBackground","photo_bg"],"sourceRoot":""}